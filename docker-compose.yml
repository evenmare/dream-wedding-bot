services:
  bot:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    env_file:
      - .env
    networks:
      - production_network
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  sync_commands:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    env_file:
      - .env
    networks:
      - production_network
    depends_on:
      db:
        condition: service_healthy
    command: "uv run __main__.py run-command -n sync-available-commands"

  migrations:
    build:
      context: ./
      dockerfile: ./docker/migrations.Dockerfile
    env_file:
      - .env
    networks:
      - production_network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - pg_store:/var/lib/postgresql/data
    networks:
      - production_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d $$POSTGRES_DB -U $$POSTGRES_USER" ]
      interval: 5s
      timeout: 60s
      retries: 5

volumes:
  pg_store:

networks:
  production_network:
